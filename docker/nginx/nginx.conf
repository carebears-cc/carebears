# docker/nginx/nginx.conf
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        listen [::]:80; # Listen on IPv6 as well
        server_name app.carebears.cc; 
        # For development, you might just use: server_name localhost;

        # Redirect all other HTTP traffic to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2; # Listen on IPv6 as well
        server_name app.carebears.cc; 
        # For development, you might just use: server_name localhost;

        # SSL Configuration (Paths provided by Certbot)
        # Replace 'your_domain.com' below with your actual primary domain used by Certbot
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;

        # Optional: Stronger SSL settings (recommended for production)
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384";
        ssl_prefer_server_ciphers on;
        ssl_stapling on;
        ssl_stapling_verify on;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Frame-Options DENY;

        # Optional: Diffie-Hellman parameter for stronger security
        # If you generated ssl-dhparams.pem and mounted it:
        # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # Serve static files directly from Nginx (as per previous discussion)
        # location /static/ {
        #    alias /usr/share/nginx/html/static/; # Match path from Dockerfile COPY
        #    expires 30d;
        #    add_header Cache-Control "public, no-transform";
        #}

        # Proxy all other requests to the FastAPI application
        location / {
            proxy_pass http://app:8000; # 'app' is the service name in docker-compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme; # Important for apps checking HTTPS
            client_max_body_size 10M;
        }

        error_log /var/log/nginx/error.log warn;
        access_log /var/log/nginx/access.log;
    }
}
